---
#
# Playbook deploying and setting up your undercloud for overcloud deployment in scale lab
# environment or the bagl environment.
#
# Tested against OSP 8/9/10 and single-nic-vlans config setup with private external network
#

# Tasks as root
- hosts: undercloud
  gather_facts: true
  vars_files:
    - vars/main.yml
  remote_user: root
  tasks:
    - name: Disable epel
      shell: rpm -e epel-release
      ignore_errors: true

    - name: Disable beaker repos
      shell: rm -rf /etc/yum.repos.d/beaker-*

    - name: Add custom repos
      template:
        src: "templates/undercloud-deploy.repo.j2"
        dest: /etc/yum.repos.d/undercloud-deploy.repo
      when: deploy_additional_repos

    - name: Get rhos-release
      get_url:
        url: "{{rhos_release_rpm}}"
        dest: /root/rhos-release.rpm
        validate_certs: false

    - name: Install rhos-release
      yum: name=/root/rhos-release.rpm

    - name: Setup OSP version to install
      command: "rhos-release {{rhos_release}} -p {{build}}"

    - name: Install terminal multiplexers
      yum: name={{item}}
      with_items:
        - tmux
        - screen

    - name: Update Packages
      yum: name=* state=latest

    - name: Reboot machine
      shell: "nohup sh -c '( sleep 5 ; shutdown -r now )' &"
      async: 0
      poll: 0
      ignore_errors: true

    # 8 minute timeout
    - name: Wait for Machine Ready
      local_action:
        module: wait_for
        host: "{{inventory_hostname}}"
        port: 22
        delay: 15
        timeout: 480

    - name: Add stack user
      user: name=stack

    # Not entirely sure why the password wouldn't take with the initial command
    - name: Stack user password
      user:
        name: stack
        update_password: always
        password: "{{stack_password}}"

    - name: Sudo for stack user
      shell: echo "stack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack; chmod 0440 /etc/sudoers.d/stack

    - name: Setup authorized key upload
      authorized_key:
        user: stack
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Setup tripleo directories
      file:
        path: "{{item}}"
        state: directory
        owner: stack
        group: stack
      with_items:
        - /home/stack/images
        - /home/stack/templates

    - name: Install tripleo
      yum: name=python-tripleoclient

    - name: Set hostname
      shell: hostnamectl set-hostname {{ansible_fqdn}}

    - name: Set transient hostname
      shell: hostnamectl set-hostname --transient {{ansible_fqdn}}

    - name: Fix hosts file
      lineinfile:
        dest: /etc/hosts
        line: "127.0.0.1   {{ansible_fqdn}} {{ansible_hostname}} localhost localhost.localdomain localhost4 localhost4.localdomain4"
        regexp: "127.0.0.1"

    - name: Copy undercloud.conf
      template:
        src: "templates/undercloud.{{version}}.conf.j2"
        dest: /home/stack/undercloud.conf
        owner: stack
        group: stack

    - name: Deploy Private external vlan interface
      template:
        src: templates/ifcfg-vlan.j2
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{external_vlan_device}}"
        owner: root
        group: root
      when: deploy_external_private_vlan

    - name: Turn on Private external vlan interface
      shell: ifup {{external_vlan_device}}
      when: deploy_external_private_vlan

- hosts: undercloud
  gather_facts: false
  vars_files:
    - vars/main.yml
  remote_user: stack
  tasks:
    - name: Install undercloud
      shell: openstack undercloud install

    - name: Install ipa and overcloud images
      become: true
      yum: name={{item}}
      with_items:
        - rhosp-director-images
        - rhosp-director-images-ipa

    - name: Untar ipa and overcloud images
      command: "tar -xvf {{item}}  -C /home/stack/images"
      with_items:
        - "/usr/share/rhosp-director-images/overcloud-full-latest-{{version}}.0.tar"
        - "/usr/share/rhosp-director-images/ironic-python-agent-latest-{{version}}.0.tar"

    - name: Upload images
      shell: . /home/stack/stackrc; openstack overcloud image upload --image-path /home/stack/images/

    - name: Get neutron subnet uuid
      shell: . /home/stack/stackrc; neutron subnet-list|grep start| awk '{print $2}'
      register: neutron_subnet_uuid

    - debug: msg="neutron_subnet_uuid- {{neutron_subnet_uuid}}"

    - name: Setup DNS on Undercloud Neutron subnet
      shell: ". /home/stack/stackrc; neutron subnet-update {{neutron_subnet_uuid.stdout}} --dns-nameserver {{dns_server}}"

    - name: Get instackenv.json
      get_url:
        url: "{{instackenv_json}}"
        dest: /home/stack/instackenv.json
        owner: stack
        group: stack

    - name: Import instackenv.json
      shell: . /home/stack/stackrc; openstack baremetal import --json /home/stack/instackenv.json

    - name: Configure boot
      shell: . /home/stack/stackrc; openstack baremetal configure boot

    - name: Introspect Nodes
      shell: . /home/stack/stackrc; openstack baremetal introspection bulk start

    - name: Remove boot_option:local from ironic nodes
      shell: . /home/stack/stackrc; ironic node-list | grep None | awk '{print $2}' | xargs -I % ironic node-update % replace properties/capabilities='cpu_vt:true,cpu_hugepages:true,cpu_txt:true,cpu_aes:true,cpu_hugepages_1g:true'

    - name: Remove boot_option:local from flavors
      shell: ". /home/stack/stackrc; openstack flavor unset --property 'capabilities:boot_option' {{item}}"
      with_items:
        - baremetal
        - compute
        - control

    - name: Copy original network configuration files
      shell: cp -r /usr/share/openstack-tripleo-heat-templates/network/config/single-nic-vlans ~/templates/nic-configs

    - name: Copy roles_data.yaml into ~/templates
      shell: cp /usr/share/openstack-tripleo-heat-templates/roles_data.yaml ~/templates

    - name: Copy over static configuration files
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: stack
        group: stack
      with_items:
        - src: files/compute.yaml
          dest: /home/stack/templates/nic-configs/compute.yaml
        - src: files/controller.yaml
          dest: /home/stack/templates/nic-configs/controller.yaml
        - src: files/tunings.yaml
          dest: /home/stack/tunings.yaml

    - name: Copy network-environment.yaml
      template:
        src: "templates/network-environment.yaml.j2"
        dest: /home/stack/templates/network-environment.yaml
        owner: stack
        group: stack

    # (WARNING) This is more than likely a hack to allow external network addresses on compute nodes
    - name: Fix /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml
      become: true
      lineinfile:
        dest: /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml
        line: "  OS::TripleO::Compute::Ports::ExternalPort: ../network/ports/external.yaml"
        regexp: "  OS::TripleO::Compute::Ports::ExternalPort: ../network/ports/noop.yaml"
        backup: true
      when: allow_external_on_compute

    - name: Place version metadata json file in /home/stack
      become: true
      template:
        src: "templates/version.json.j2"
        dest: "{{version_directory}}/version.json"
        owner: stack
        group: stack

    # Configure subjectAltNames (Incomplete as of right now)
    # - name: Configure alt_names in openssl.cnf
    #   become: true
    #   ini_file:
    #     dest: /etc/pki/tls/openssl.cnf
    #     section: "{{item.section}}"
    #     option: "{{item.option}}"
    #     value: "{{item.value}}"
    #   with_items:
    #     - section: " v3_req "
    #       option: "subjectAltName"
    #       value: "@alt_names"
    #     - section: "alt_names"
    #       option: "IP.1"
    #       value: "{{external_network_vip}}"
    #     - section: "alt_names"
    #       option: "DNS.1"
    #       value: "{{external_network_vip}}"
    #   when: overcloud_ssl_endpoints

    - name: Create a SSL Private Key
      shell: "openssl genrsa -out /home/stack/overcloud-privkey.pem 2048"
      when: overcloud_ssl_endpoints

    - name: Create Self-Signed CA Certificate
      shell: "openssl req -new -x509 -key /home/stack/overcloud-privkey.pem -out /home/stack/overcloud-cacert.pem -days 365 -subj '/C=US/ST=NC/L=Raleigh/O=Red Hat/OU=Performance/CN={{external_network_vip}}'"
      # Use when subjectaltnames configured:
      #shell: "openssl req -new -x509 -key /home/stack/overcloud-privkey.pem -out /home/stack/overcloud-cacert.pem -days 365 -subj '/C=US/ST=NC/L=Raleigh/O=Red Hat/OU=Performance/CN={{external_network_vip}}' -extensions v3_req"
      when: overcloud_ssl_endpoints

    - name: Copy Self-Signed CA Certificate to trusted store
      shell: "cp /home/stack/overcloud-cacert.pem /etc/pki/ca-trust/source/anchors/"
      become: true
      when: overcloud_ssl_endpoints

    - name: Update the CA store
      shell: "update-ca-trust extract"
      become: true
      when: overcloud_ssl_endpoints

    - name: Obtain the Private Key
      shell: "cat /home/stack/overcloud-privkey.pem"
      register: private_key
      when: overcloud_ssl_endpoints

    - name: Obtain the CA certificate
      shell: "cat /home/stack/overcloud-cacert.pem"
      register: cacert
      when: overcloud_ssl_endpoints

    - name: Set ssl_private_key
      set_fact:
        ssl_private_key: "{{private_key.stdout | indent(4) | string}}"
      when: overcloud_ssl_endpoints

    - name: Set ssl_certificate
      set_fact:
        ssl_certificate: "{{cacert.stdout | indent(4) | string}}"
      when: overcloud_ssl_endpoints

    - name: Deploy SSL/TLS yamls
      template:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
      with_items:
        - src: "templates/enable-tls.yaml.j2"
          dest: "/home/stack/templates/enable-tls.yaml"
        - src: "templates/inject-trust-anchor.yaml.j2"
          dest: "/home/stack/templates/inject-trust-anchor.yaml"
        - src: "templates/cloudname.yaml.j2"
          dest: "/home/stack/templates/cloudname.yaml"
      when: overcloud_ssl_endpoints

# Typical deployment
# date;time openstack overcloud deploy --templates -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e /home/stack/templates/network-environment.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e /home/stack/tunings.yaml --libvirt-type=kvm --neutron-public-interface nic1 --ntp-server 0.pool.ntp.org --neutron-network-type vxlan --neutron-tunnel-types vxlan --control-scale 3 --compute-scale 6 ;date

# Modifing roles_data.yaml
# date;time openstack overcloud deploy --templates -r /home/stack/templates/roles_data.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e /home/stack/templates/network-environment.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e /home/stack/tunings.yaml --libvirt-type=kvm --neutron-public-interface nic1 --ntp-server 0.pool.ntp.org --neutron-network-type vxlan --neutron-tunnel-types vxlan --control-scale 3 --compute-scale 6 ;date

# SSL/TLS Public Endpoints (Typical)
# date;time openstack overcloud deploy --templates -e ~/templates/enable-tls.yaml -e ~/templates/inject-trust-anchor.yaml -e ~/templates/cloudname.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/tls-endpoints-public-dns.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e /home/stack/templates/network-environment.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e /home/stack/tunings.yaml --libvirt-type=kvm --neutron-public-interface nic1 --ntp-server 0.pool.ntp.org --neutron-network-type vxlan --neutron-tunnel-types vxlan --control-scale 3 --compute-scale 6 ;date

# SSL/TLS Public Endpoints (Modify roles_data.yaml)
# date;time openstack overcloud deploy --templates -r /home/stack/templates/roles_data.yaml -e ~/templates/enable-tls.yaml -e ~/templates/inject-trust-anchor.yaml -e ~/templates/cloudname.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/tls-endpoints-public-dns.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e /home/stack/templates/network-environment.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e /home/stack/tunings.yaml --libvirt-type=kvm --neutron-public-interface nic1 --ntp-server 0.pool.ntp.org --neutron-network-type vxlan --neutron-tunnel-types vxlan --control-scale 3 --compute-scale 6 ;date
